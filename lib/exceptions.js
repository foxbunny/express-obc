// Generated by LiveScript 1.2.0
var exceptions, NotImplementedError, ConfigurationError;
exceptions = module.exports;
exceptions.NotImplementedError = NotImplementedError = (function(superclass){
  var prototype = extend$((import$(NotImplementedError, superclass).displayName = 'NotImplementedError', NotImplementedError), superclass).prototype, constructor = NotImplementedError;
  function NotImplementedError(){
    NotImplementedError.superclass.apply(this, arguments);
  }
  return NotImplementedError;
}(Error));
exceptions.ConfigurationError = ConfigurationError = (function(superclass){
  var prototype = extend$((import$(ConfigurationError, superclass).displayName = 'ConfigurationError', ConfigurationError), superclass).prototype, constructor = ConfigurationError;
  function ConfigurationError(){
    ConfigurationError.superclass.apply(this, arguments);
  }
  return ConfigurationError;
}(Error));
function extend$(sub, sup){
  function fun(){} fun.prototype = (sub.superclass = sup).prototype;
  (sub.prototype = new fun).constructor = sub;
  if (typeof sup.extended == 'function') sup.extended(sub);
  return sub;
}
function import$(obj, src){
  var own = {}.hasOwnProperty;
  for (var key in src) if (own.call(src, key)) obj[key] = src[key];
  return obj;
}